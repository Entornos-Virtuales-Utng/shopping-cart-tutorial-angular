{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nlet ProductComponent = class ProductComponent {\n  constructor(cartService, messageService) {\n    this.cartService = cartService;\n    this.messageService = messageService;\n    this.display = false;\n    this.productos = this.cartService.getItems();\n  }\n  share() {\n    window.alert('El producto ha sido compartido!!');\n  }\n  onNotify() {\n    window.alert('Serás notificado cuando el producto esté en venta!!');\n  }\n  addToCart(product) {\n    console.log('Agregando producto...');\n    let total = this.cartService.getTotal(); //Total en carrito en compra\n    total += product.price;\n    //Buscar id del producto\n    let producto = this.productos.find(p => p.id === product.id);\n    if (!producto) {\n      console.log('Agregando producto ' + JSON.stringify(product));\n      let p = {\n        id: product.id,\n        name: product.name,\n        description: product.description,\n        price: product.price,\n        quantity: 1\n      };\n      this.cartService.addToCart(p);\n    } else {\n      console.log('Agregando producto ' + JSON.stringify(product));\n      producto.quantity += 1;\n      let index = this.productos.findIndex(p => p.id === product.id);\n      this.productos[index] = producto;\n    }\n    this.cartService.setTotal(total);\n    window.alert(\"Your product has been added to the cart!\");\n    //this.messageService.add({severity:'success', summary:'Service Message', detail:'Via MessageService'});\n  }\n\n  showDialog() {\n    this.display = true;\n  }\n};\n__decorate([Input()], ProductComponent.prototype, \"product\", void 0);\nProductComponent = __decorate([Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})], ProductComponent);\nexport { ProductComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAQ,eAAe;AASzC,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAKzBC,YAAoBC,WAAuB,EAAUC,cAA8B;IAA/D,gBAAW,GAAXD,WAAW;IAAsB,mBAAc,GAAdC,cAAc;IAHnE,YAAO,GAAY,KAAK;IACxB,cAAS,GAAG,IAAI,CAACD,WAAW,CAACE,QAAQ,EAAE;EAE8C;EAErFC,KAAK;IACHC,MAAM,CAACC,KAAK,CAAC,kCAAkC,CAAC;EAClD;EAEAC,QAAQ;IACNF,MAAM,CAACC,KAAK,CAAC,qDAAqD,CAAC;EACrE;EAEAE,SAAS,CAACC,OAAgB;IACxBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IAEpC,IAAIC,KAAK,GAAG,IAAI,CAACX,WAAW,CAACY,QAAQ,EAAE,CAAC,CAAC;IACzCD,KAAK,IAAIH,OAAO,CAACK,KAAK;IAEtB;IACA,IAAIC,QAAQ,GAAG,IAAI,CAACC,SAAS,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKV,OAAO,CAACU,EAAE,CAAC;IAE5D,IAAI,CAACJ,QAAQ,EAAE;MACbL,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGS,IAAI,CAACC,SAAS,CAACZ,OAAO,CAAC,CAAC;MAC5D,IAAIS,CAAC,GAAG;QACNC,EAAE,EAAEV,OAAO,CAACU,EAAE;QACdG,IAAI,EAAEb,OAAO,CAACa,IAAI;QAClBC,WAAW,EAAEd,OAAO,CAACc,WAAW;QAChCT,KAAK,EAAEL,OAAO,CAACK,KAAK;QACpBU,QAAQ,EAAE;OACX;MAED,IAAI,CAACvB,WAAW,CAACO,SAAS,CAACU,CAAC,CAAC;KAE9B,MAAM;MACLR,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGS,IAAI,CAACC,SAAS,CAACZ,OAAO,CAAC,CAAC;MAC5DM,QAAQ,CAACS,QAAQ,IAAK,CAAC;MAEvB,IAAIC,KAAK,GAAG,IAAI,CAACT,SAAS,CAACU,SAAS,CAACR,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKV,OAAO,CAACU,EAAE,CAAC;MAC9D,IAAI,CAACH,SAAS,CAACS,KAAK,CAAC,GAAGV,QAAQ;;IAElC,IAAI,CAACd,WAAW,CAAC0B,QAAQ,CAACf,KAAK,CAAC;IAEhCP,MAAM,CAACC,KAAK,CAAC,0CAA0C,CAAC;IACxD;EACA;;EAGFsB,UAAU;IACN,IAAI,CAACC,OAAO,GAAG,IAAI;EACvB;CACH;AApDYC,YAARhC,KAAK,EAAE,iDAAkB;AADjBC,gBAAgB,eAL5BF,SAAS,CAAC;EACTkC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,GACWlC,gBAAgB,CAqD5B;SArDYA,gBAAgB","names":["Component","Input","ProductComponent","constructor","cartService","messageService","getItems","share","window","alert","onNotify","addToCart","product","console","log","total","getTotal","price","producto","productos","find","p","id","JSON","stringify","name","description","quantity","index","findIndex","setTotal","showDialog","display","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Soporte\\Downloads\\entornos\\src\\app\\product\\product.component.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport {Product, CartProduct} from '../products';\nimport { CartService } from '../cart.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent {\n    @Input() product!:Product;\n    display: boolean = false;\n    productos = this.cartService.getItems();    \n\n    constructor(private cartService:CartService, private messageService: MessageService){}\n\n    share() {\n      window.alert('El producto ha sido compartido!!');\n    }\n\n    onNotify() {\n      window.alert('Serás notificado cuando el producto esté en venta!!');\n    }\n\n    addToCart(product: Product) {\n      console.log('Agregando producto...');\n  \n      let total = this.cartService.getTotal(); //Total en carrito en compra\n      total += product.price;\n\n      //Buscar id del producto\n      let producto = this.productos.find(p => p.id === product.id);\n\n      if (!producto) {\n        console.log('Agregando producto ' + JSON.stringify(product));\n        let p = {\n          id: product.id,\n          name: product.name,\n          description: product.description,\n          price: product.price,\n          quantity: 1,\n        };\n\n        this.cartService.addToCart(p);\n  \n      } else {\n        console.log('Agregando producto ' + JSON.stringify(product));\n        producto.quantity +=  1;\n\n        let index = this.productos.findIndex(p => p.id === product.id);\n        this.productos[index] = producto;\n      }\n      this.cartService.setTotal(total);\n\n      window.alert(\"Your product has been added to the cart!\");\n      //this.messageService.add({severity:'success', summary:'Service Message', detail:'Via MessageService'});\n      }\n    \n\n    showDialog() {\n        this.display = true;\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}